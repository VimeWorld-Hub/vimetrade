const mysql = require('../index').mysql
const axios = require("axios");
const {Keyboard} = require('vk-io')
const config = require("../config");
const messages = require("../libs/messages");
const vk = require("../index").vk
const sender = require('../index').sender



module.exports.info = {
    name: 'buy',
    usage: "<–∞–π–¥–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è>",
    aliases: 'buy, –∫—É–ø–∏—Ç—å, –∫—É–ø, –±–∞–π, –±—É–π',
    description: '–∫—É–ø–∏—Ç—å –≤–∏–º–µ—Ä—ã',
    permission: 1,
    enabled: true,
    help: true
};

module.exports.run = async (context, delim) => {
    if (!delim) delim = context.text.split(' ')

    if(!delim[1]) return sender.noArguments(context, delim, this.info)

    const sells = await mysql.execute('SELECT * FROM `sells` WHERE vk != ? AND id = ?', [context.senderId, delim[1]])

    if (!sells[0]) return context.reply("‚ùå | –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

    context.reply({
        message: `üõç | –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç ID ${sells[0].id}:`
            + `\n‚óè –ü—Ä–æ–¥–∞–≤–µ—Ü: @id${sells[0].vk}`
            + `\n‚óè –í–∏–º–µ—Ä–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏: ${sells[0].amount}`
            + `\n‚óè –ö—É—Ä—Å: ${sells[0].rub} —Ä—É–±. –∑–∞ 1 –≤–∏–º–µ—Ä`,
        keyboard: Keyboard.builder()
            .inline()
            .textButton({
                label: "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
                payload: `buy:${sells[0].id}`,
                color: Keyboard.POSITIVE_COLOR
            })
    })
};

module.exports.runPayload = async (context) => {
    const delim = context.messagePayload.split(":")

    let sells = await mysql.execute('SELECT * FROM `sells` WHERE vk != ? AND id = ?', [context.senderId, delim[1]])

    if (!sells[0]) return context.reply('‚ùå | –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å–¥–µ–ª–∫–∞..')

    let pok = await mysql.execute('SELECT * FROM users WHERE vk = ?', [context.senderId])
    let prod = await mysql.execute('SELECT * FROM users WHERE vk = ?', [sells[0].vk])

    let amount = await context.question({
            message: 'üí≥ | –í–≤–µ–¥–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–º–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏'
        }
    );
    amount = amount.text

    if (!await messages.isValidSum(amount)) {
        return context.send('‚ùå | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–º–µ—Ä–æ–≤ —É–∫–∞–∑–∞–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ')
    }

    if (amount <= 0) {
        return context.send('‚ùå | –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–º–µ—Ä–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è')
    } else if (amount * sells[0].rub > pok[0].rubs) {
        return context.send('‚ùå | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
    }

    if (sells[0].amount < amount)
        return context.send('‚ùå | –¢–∞–∫–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–∏–º–µ—Ä–æ–≤ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏')


    let to = await context.question({
            message: 'üí≥ | –í–≤–µ–¥–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∏–∫ –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–π—Ç–∏ –≤–∏–º–µ—Ä—ã\n\n‚ö† –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è –Ω–∏–∫–∞ –∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–º–Ω–∏, —á—Ç–æ –Ω–∞—à–∞ –≥—Ä—É–ø–ø–∞ –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –Ω–µ–≤–µ—Ä–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã'
        }
    );
    to = to.text

    let pay = await context.question({
            message: `üõí | –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ @id${sells[0].vk} ${await messages.plurals(amount * sells[0].rub, "—Ä—É–±–ª—å", "—Ä—É–±–ª—è", "—Ä—É–±–ª–µ–π")}. –∑–∞ –ø–æ–∫—É–ø–∫—É ${await messages.plurals(amount, "–≤–∏–º–µ—Ä–∞", "–≤–∏–º–µ—Ä–æ–≤", "–≤–∏–º–µ—Ä–æ–≤")}?`,
            keyboard: Keyboard.builder()
                .inline()
                .textButton({
                    label: "–î–∞",
                    payload: "yes",
                    color: Keyboard.POSITIVE_COLOR
                })
                .textButton({
                    label: "–ù–µ—Ç",
                    payload: "no",
                    color: Keyboard.NEGATIVE_COLOR
                })
        }
    );

    if (pay.payload == 'yes') {
        sells = await mysql.execute('SELECT * FROM `sells` WHERE vk != ? AND id = ?', [context.senderId, delim[1]])

        if (!sells[0])
            return context.send('‚úÖ | –û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ')

        pok = await mysql.execute('SELECT * FROM users WHERE vk = ?', [context.senderId])
        prod = await mysql.execute('SELECT * FROM users WHERE vk = ?', [sells[0].vk])

        if (amount * sells[0].rub > pok[0].rubs) {
            return context.send('‚ùå | –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ. –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å')
        }

        if (sells[0].amount < amount)
            return context.send('‚ùå | –¢–∞–∫–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤–∏–º–µ—Ä–æ–≤ –Ω–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏')

        //–¥–µ–Ω—å–≥–∏
        const res = await axios.get(`${config.vimeworld.vimeapi_domen}/giveVimers.php?token=${config.vimeworld.vimeapi_token}&to=${to}&vimers=${amount}`)

        if (res.data.code != 1)
            return context.reply(`‚ùå | –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞..`)

        //–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–æ–≤
        await mysql.execute('UPDATE `users` SET `rubs`=? WHERE vk = ?', [Number(pok[0].rubs) - Number(amount * sells[0].rub), context.senderId])
        await mysql.execute('UPDATE `users` SET `rubs`=? WHERE vk = ?', [Number(prod[0].rubs) + Number(amount * sells[0].rub), sells[0].vk])

        //–æ–±—ä—è–≤–ª–µ–Ω–∏–µ
        if (sells[0].amount - amount <= 0) {
            await mysql.execute('DELETE FROM `sells` WHERE `id` = ?', [sells[0].id])
        } else {
            await mysql.execute('UPDATE `sells` SET `amount`=? WHERE id = ?', [sells[0].amount - amount, sells[0].id])
        }

        //–ø–æ–∫—É–ø–∞—Ç–µ–ª—å
        context.send(`‚úÖ | –°–¥–µ–ª–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –û—Å—Ç–∞–≤—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∑—ã–≤: https://vk.com/topic-207749865_48239853`)

        //–ø—Ä–æ–¥–∞–≤–µ—Ü
        try {
            vk.api.messages.send({
                user_id: sells[0].vk,
                random_id: 0,
                message: `üÜï | –£ —Ç–µ–±—è –∫—É–ø–∏–ª–∏ ${await messages.plurals(amount, "–≤–∏–º–µ—Ä", "–≤–∏–º–µ—Ä–∞", "–≤–∏–º–µ—Ä–æ–≤")}. –¢—ã –ø–æ–ª—É—á–∏–ª ${await messages.plurals(amount * sells[0].rub, "—Ä—É–±–ª—å", "—Ä—É–±–ª—è", "—Ä—É–±–ª–µ–π")}`
                    + `\nüéä | –í—ã–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –º–æ–∂–Ω–æ –≤ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ`
            })
        } catch (e) {
            console.error(e)
        }
    } else if (pay.payload == 'no') {
        context.send(`‚ùå | –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞..`)
    } else {
        context.send(`‚ùå | –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –æ—Ç–≤–µ—Ç. –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.. `)
    }
}